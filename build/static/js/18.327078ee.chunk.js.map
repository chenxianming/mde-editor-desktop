{"version":3,"sources":["../node_modules/codemirror/mode/soy/soy.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","paramData","noEndTag","soyState","tags","variableScope","reduceIndent","indentingTags","Object","keys","filter","tag","defineMode","config","textMode","getMode","modes","html","name","multilineTagIndentFactor","multilineTagIndentPastTag","attributes","text","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","length","tokenUntil","stream","state","untilRegExp","sol","indent","eat","oldString","string","match","exec","substr","pos","index","result","hideFirstChars","localState","localStates","mode","token","prepend","list","element","next","popcontext","context","scope","variables","previousContext","Context","this","kind","startState","templates","scopes","quoteKind","copyState","concat","map","loose","pop","skipToEnd","paramRe","current","push","peek","eatWhile","tagName","endTag","substring","selfClosed","indexOf","contains","test","prevTag","indentingTag","tagError","textAfter","line","top","Pass","innerMode","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","defineMIME","mod","require","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","defaults","htmlMode","prop","inText","chain","parser","tokenize","ch","inBlock","doctype","depth","inTag","baseState","tagStart","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","startOfLine","prev","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","alignCDATA","tagAfter","grabbers","configuration","helperType","skipAttribute","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","dest","source","i","unshift","parserConfig","configTags","configScript","scriptTypes","matches","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","localMode","pat","cur","close","search","backUp","maybeBackup","local"],"mappings":"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","file":"static/js/18.327078ee.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"@state?\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"var-def\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"var-def\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          templates: null,\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          templates: state.templates,\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.templates = prepend(state.templates, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type\":\n            if (stream.peek() == \"}\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.eatWhile(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag = state.tag[0] == \"/\";\n            var tagName = endTag ? state.tag.substring(1) : state.tag;\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            } else if (match = stream.match(/([\\w]+)(?=\\()/)) {\n              return \"variable callee\";\n            } else if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match;\n              return \"string\";\n            }\n            if (stream.match(/(null|true|false)(?!\\w)/) ||\n              stream.match(/0x([0-9a-fA-F]{2,})/) ||\n              stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n              return \"atom\";\n            }\n            if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n              // Tokenize filter, binary, null propagator, and equality operators.\n              return \"operator\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              return ref(state.variables, match[1]);\n            }\n            if (match = stream.match(/^\\w+/)) {\n              return /^(?:as|and|or|not|in)$/.test(match[0]) ? \"keyword\" : null;\n            }\n            stream.next();\n            return null;\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.indent -= config.indentUnit;\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n        }\n\n        if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              if (!state.context || state.context.tag != tagName) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}